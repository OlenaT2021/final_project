<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>Content quality assuarance before localization</title>
    </head>
    <body>
        <h2>Content quality assurance before localization</h2>
        <p>Preparing software documentation for internationalization and localization requires foresight and precision to guarantee its success in a global market. One of the most essential conditions for it is to perform quality assurance testing (QA), which indicates that the content is prepared for localization.</p>
        <p>The validating process ensures the document is structured, written, and technically prepared to support translation into multiple languages without issues. The goal is to confirm that the content is internationalization-ready, meaning it can be seamlessly adapted for different regions and cultures.</p>
        <p>Below are the main steps to validate the content readiness before handing it off for localization.</p>
        <ul>
            <li>
                <p><b>Check language clarity and neutrality</b>
                </p>
                <ul style="list-style-type: circle;">
                    <li>
                        <p>Review the text to ensure it uses simple, clear language free of idioms, slang, or culture-specific references (for example, replace "home run" with "success").</p>
                    </li>
                    <li>
                        <p>Confirm consistent terminology (for example, "save" is not used interchangeably with "store") to avoid confusion during translation.</p>
                    </li>
                    <li>
                        <p>Verify that examples (for example, names, dates) are generic or include notes for localization (for example, "replace 'John Doe' with a local name").</p>
                    </li>
                </ul>
            </li>
        </ul>
        <ul>
            <li>
                <p><b>Ensure text is externalized and structured</b>
                </p>
                <ul style="list-style-type: circle;">
                    <li>
                        <p>Check that all translatable content (for example, headings, instructions, error messages) is separated from code or formatting (for example, stored in resource files like<code> .json</code>).</p>
                    </li>
                    <li>
                        <p>Avoid concatenated strings (for example, "Page" + " " + "1"); use placeholders instead (for example, <code>"Page {0}"</code>).</p>
                    </li>
                    <li>
                        <p>Confirm that no text is embedded in images or hardcoded in the documentation layout.</p>
                    </li>
                </ul>
            </li>
        </ul>
        <ul>
            <li>
                <p><b>Test for text expansion and formatting</b>
                </p>
                <ul style="list-style-type: circle;">
                    <li>
                        <p>Simulate text expansion by increasing string length by 20-30% (for example, "Click here" becomes "Click here now please") to ensure layouts do not break.</p>
                    </li>
                    <li>
                        <p>Verify that the documentation supports Unicode (UTF-8) encoding for all character sets (for example, Latin, Arabic, Chinese).</p>
                    </li>
                    <li>
                        <p>Check that fonts can render special characters and scripts without issues (for example, no boxes or garbled text).</p>
                    </li>
                </ul>
            </li>
        </ul>
        <ul>
            <li>
                <p><b>Validate flexibility for regional variations</b>
                </p>
                <ul style="list-style-type: circle;">
                    <li>
                        <p>Ensure date, time, and number formats are documented as adjustable (for example, "use [DD-MM-YYYY] or locale equivalent").</p>
                    </li>
                    <li>
                        <p>Confirm placeholders exist for dynamic data (for example,<code> {currency} {amount}</code> instead of "$10") to support local currencies.</p>
                    </li>
                    <li>
                        <p>Test that pluralization is handled correctly (for example, "1 file" or "2 files") with notes for languages with complex rules (for example, Arabic).</p>
                    </li>
                </ul>
            </li>
        </ul>
        <ul>
            <li>
                <p><b>Assess visual and layout compatibility</b>
                </p>
                <ul style="list-style-type: circle;">
                    <li>
                        <p>Verify that layouts (for example, tables, bullet lists) can accommodate longer or shorter translated text without truncation or overlap.</p>
                    </li>
                    <li>
                        <p>Check that the text in diagrams or screenshots is separate (for example, captions, not embedded) and marked for translation.</p>
                    </li>
                    <li>
                        <p>Test right-to-left (RTL) readiness by flipping text direction to ensure alignment and flow remain intact.</p>
                    </li>
                </ul>
            </li>
        </ul>
        <ul>
            <li>
                <p><b>Provide context for translators</b>
                </p>
                <ul style="list-style-type: circle;">
                    <li>
                        <p>Include a glossary of key terms with definitions (for example, "upload: to send a file to a server") for consistency.</p>
                    </li>
                    <li>
                        <p>Add notes or comments explaining ambiguous phrases or UI references (for example, "’submit’ refers to a button label").</p>
                    </li>
                    <li>
                        <p>Ensure each section has enough context, so translators understand its purpose without guessing.</p>
                    </li>
                </ul>
            </li>
        </ul>
        <ul>
            <li>
                <p><b>Perform a pseudo-localization test</b>
                </p>
                <ul style="list-style-type: circle;">
                    <li>
                        <p>Replace text with pseudo-translated strings (for example, "Hëłłô Wørłd" with accents and extra length) to imitate real translations.</p>
                    </li>
                    <li>
                        <p>Check for layout issues, missing strings, or encoding errors in the documentation.</p>
                    </li>
                    <li>
                        <p>Validate that all translatable elements are properly flagged and nothing is overlooked.</p>
                    </li>
                </ul>
            </li>
            <li>
                <p><b>Review technical accuracy</b>
                </p>
                <ul style="list-style-type: circle;">
                    <li>
                        <p>Cross-check the documentation against the software to ensure instructions match the actual interface and functionality.</p>
                    </li>
                    <li>
                        <p>Verify that UI terms (for example, button labels, menu names) are consistent between the software and documentation.</p>
                    </li>
                    <li>
                        <p>Test that documented features work across different locale settings (for example, changing language in the app).</p>
                    </li>
                </ul>
            </li>
            <li>
                <p><b>Confirm cultural neutrality</b>
                </p>
                <ul style="list-style-type: circle;">
                    <li>
                        <p>Ensure content avoids region-specific assumptions (for example, "call during business hours" specifies a time zone or is adjustable).</p>
                    </li>
                    <li>
                        <p>Check that symbols or examples (for example, a checkmark for "done") are universally understood or replaceable.</p>
                    </li>
                    <li>
                        <p>Remove or flag any humour or references that may not translate well.</p>
                    </li>
                </ul>
            </li>
            <li>
                <p><b>Prepare supporting materials</b>
                </p>
                <ul style="list-style-type: circle;">
                    <li>
                        <p>Compile a style guide (for example, tone, punctuation rules) to guide translators.</p>
                    </li>
                    <li>
                        <p>Provide access to the software UI or screenshots, so translators can see the content in context.</p>
                    </li>
                    <li>
                        <p>Set up a process for translators to ask questions if something is unclear.</p>
                    </li>
                </ul>
            </li>
        </ul>
        <p>Once these steps are complete, the documentation should be fully prepared for localization, minimizing rework or errors during translation.</p>
        <p>A vivid example of <b>poorly</b> localized content is <b>Pepsi's Slogan in China</b>.</p>
        <p>In the 1960s, Pepsi's slogan <cite>"Come alive! You're in the Pepsi generation"</cite> was translated for the Chinese market. However, the translation was interpreted as "Pepsi brings your ancestors back from the grave". This misinterpretation stemmed from a literal translation that didn't consider cultural nuances and idiomatic expressions in Chinese. The result was confusion and a negative reception among Chinese consumers, illustrating the pitfalls of inadequate localization.</p>
        <p>And the prime example of <b>successful</b> localization is <b>Coca-Cola's "Share a Coke"</b> marketing campaign.</p>
        <p>The campaign involved printing popular names on Coke bottles, encouraging consumers to find bottles with their own or friends' names. In Ireland, Coca-Cola used common Irish names like "Aoife" and "Oisín" to resonate with local consumers. In China, where using first names can be considered too informal, Coca-Cola replaced names with terms like "classmate" and "close friend" to align with cultural norms. This thoughtful adaptation led to increased consumer engagement and sales across diverse markets.</p>
        <p>Below is the short checklist to be used during the validation process.</p>
        <h3>Final validation checklist</h3>
        <p><span style="font-family: 'Arial Unicode MS'">☐</span> All text is clear, neutral, and free of cultural bias.</p>
        <p><span style="font-family: 'Arial Unicode MS'">☐</span> Strings are externalized and use placeholders where needed.</p>
        <p><span style="font-family: 'Arial Unicode MS'">☐</span> Layouts handle expansion and RTL text without issues.</p>
        <p><span style="font-family: 'Arial Unicode MS'">☐</span> Unicode and fonts support all target languages.</p>
        <p><span style="font-family: 'Arial Unicode MS'">☐</span> Context, glossary, and style guide are included.</p>
        <p><span style="font-family: 'Arial Unicode MS'">☐</span> Pseudo-localization reveals no technical or display problems.</p>
    </body>
</html>